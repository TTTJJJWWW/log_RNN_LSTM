# rsyslog configuration file

# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html
# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html

#### MODULES ####

# The imjournal module bellow is now used as a message source instead of imuxsock.
$ModLoad imuxsock # provides support for local system logging (e.g. via logger command)
$ModLoad imjournal # provides access to the systemd journal
$ModLoad imklog # reads kernel messages (the same are read from journald)
$ModLoad immark  # provides --MARK-- message capability

#$ModLoad omusrmsg 


# Provides UDP syslog reception
$ModLoad imudp
$UDPServerRun 514

# Provides TCP syslog reception
#$ModLoad imtcp
#$InputTCPServerRun 514

module(load="imtcp")
input(type="imtcp" port="514")
#if $fromhost-ip  == "172.16.1.5" then {
#   action(type="omfile" file="/var/log/yumh.log")
#}



#$ModLoad  omrelp  # load relp model -yumh
#$InputRELPServerRun   40000

#$ModLoad imrelp
#$InputRELPServerRun   40000


module(load="imrelp")  
input(type="imrelp" port="40000")


# add mysql service  
$ModLoad ommysql
 
#### GLOBAL DIRECTIVES ####

# Where to place auxiliary files
$WorkDirectory /var/lib/rsyslog

# Use default timestamp format
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# File syncing capability is disabled by default. This feature is usually not required,
# not useful and an extreme performance hit
#$ActionFileEnableSync on

# Include all config files in /etc/rsyslog.d/
$IncludeConfig /etc/rsyslog.d/*.conf

# Turn off message reception via local log socket;
# local messages are retrieved through imjournal now.

# File to store the position in the journal
$IMJournalStateFile imjournal.state


# yumh add 
# This one is the template to generate the log filename dynamically, depending on the client's IP address.          
$template Remote,"/var/log/syslog/%fromhost-ip%/%fromhost-ip%_%$YEAR%-%$MONTH%-%$DAY%.log"
$template v1,"%syslogseverity%,%syslogfacility%,%timegenerated%,%HOSTNAME%,%syslogtag%,%msg%\n "


template(name="log" type="list" option.sql="on"){
 constant(value="insert into logInfo  (timestamp,fromHostIP,nodeID, syslogfacility,syslogfacilityText, syslogseverity,syslogseverityText, msg)")
    constant(value=" values ('")
    property(name="timestamp" dateFormat="mysql") 
    constant(value="',' ")
    property(name="fromhost-ip")
    constant(value="', '")
    property(name="fromhost")
    constant(value="', '")
    property(name="syslogpriority")
    constant(value="', '")
    property(name="syslogfacility-text")
    constant(value="', '")
    property(name="syslogseverity")
    constant(value="', '")
    property(name="syslogseverity-text")
    constant(value="', '")
    property(name="msg")
    constant(value="')")
}


#tempalte(name="stdSQLformat" type="string" option.sql="on"
 #   string="insert into SystemEvents (Message, Facility, FromHost, Priority, DeviceReportedTime, ReceivedAt, InfoUnitID, SysLogTage) values ('%msg%', %syslogfacility%, '%HOSTNAME%', %syslogpriority%, '%timereported:::date-mysql%', '%timegenerated:::date-mysql%', %iut%, '%syslogtag%')"
#)


#template(name="StdSQLformat" type="list" option.sql="on"){
#    constant(value="insert into SystemEvents (Message, Facility, FromHost, Priority, DeviceReportedTime, ReceivedAt)")
#    constant(value=" values ('")
#    property(name="msg")
#    constant(value="', ")
#    property(name="syslogfacility")
#    constant(value=", '")
#    property(name="hostname")
#    constant(value="', ")
#    property(name="syslogpriority")
#    constant(value=", '")
#    property(name="timereported" dateFormat="mysql")
#    constant(value="', '")
#    property(name="timegenerated" dateFormat="mysql")
#    constant(value="')")
#    }


#template(name="StdSQLformata" type="list" option.sql="on"){
#    constant(value="insert into SystemEvents (Message, Facility, FromHost, Priority, DeviceReportedTime, ReceivedAt, InfoUnitID, SysLogTag)")
#    constant(value=" values ('")
#    property(name="msg")
#    constant(value="', ")
#    property(name="syslogfacility")
#    constant(value=", '")
#    property(name="hostname")
#    constant(value="', ")
#    property(name="syslogpriority")
#    constant(value=", '")
#    property(name="timereported" dateFormat="mysql")
#    constant(value="', '")
#    property(name="timegenerated" dateFormat="mysql")
#    constant(value="', ")
#    property(name="iut")
#    constant(value=", '")
#    property(name="syslogtag")
#    constant(value="')")
#    }



#### RULES ####

# Log all kernel messages to the console.
# Logging much else clutters up the screen.
#kern.*                                                 /dev/console

# Log anything (except mail) of level info or higher.
# Don't log private authentication messages!
*.info;mail.none;authpriv.none;cron.none                /var/log/messages
#*.info;mail.none;authpriv.none;cron.none                @172.16.1.5:514

# The authpriv file has restricted access.
authpriv.*                                              /var/log/secure

# Log all the mail messages in one place.
mail.*                                                  -/var/log/maillog

# Log cron stuff
cron.*                                                  /var/log/cron

# Everybody gets emergency messages
*.emerg                                                 :omusrmsg:*

# Save news errors of level crit and higher in a special file.
uucp,news.crit                                          /var/log/spooler

# Save boot messages also to boot.log
local7.*                                                /var/log/boot.log

# yumh  add ,  use template
#*.*                                                   /var/log/ymh.log;v1

# yumh  add ,  use mysql  
*.info            :ommysql:172.16.25.1,systemLog,root,root;log

# yumh  add ,  use  mysql   and template
#*.*            :ommysql:172.16.25.1,Syslog,root,root;StdSQLformat

# yumh  add , use filter
#:hostname,isequal,  "localhost"                        /var/log/yumhhh.log

# yumh  add , use filter
#:msg,contains,"log"          /var/log/yumhhh.log   


# ### begin forwarding rule ###
# The statement between the begin ... end define a SINGLE forwarding
# rule. They belong together, do NOT split them. If you create multiple
# forwarding rules, duplicate the whole block!
# Remote Logging (we use TCP for reliable delivery)
#
# An on-disk queue is created for this action. If the remote host is
# down, messages are spooled to disk and sent when it is up again.
#$ActionQueueFileName fwdRule1 # unique name prefix for spool files
#$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)
#$ActionQueueSaveOnShutdown on # save messages to disk on shutdown
#$ActionQueueType LinkedList   # run asynchronously
#$ActionResumeRetryCount -1    # infinite retries if host is down
# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional
#*.*  @172.16.1.5:514





# ### end of the forwarding rule ###
